grammar Expr_vl;prog: list END ;list: expr ';' list |        /* epsilon */;expr: term terms;terms: '+' term terms |       '-' term terms |       /* epsilon */;term: factor factors;factors: '*' factor factors |        '/' factor factors |        MOD factor factors |        /* epsilon */;factor: '(' expr ')' |        ID |        NUM;MOD: 'MOD';END: 'EOF';ID: [a-zA-Z]([a-zA-Z]|[0-9])*;NUM: [0-9]+;WS: [ \t\r\n]+ -> skip;